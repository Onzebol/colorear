---
export interface Props {
  onlyBack: boolean;
}

const { onlyBack } = Astro.props as Props;

// const colors = ["#B21F35", "#D82735", "#FF7435", "#FFA135", "#FFCB35", "#FFF735", "#00753A", "#009E47", "#16DD36", "#0052A5", "#0079E7", "#06A9FC", "#681E7E", "#753CB5", "#BD7AF6", "#000000", "#595959", "#A9A9A9", "#DDDDDD", "#FFFFFF"]
const colors = [
    "#000000", "#323132", "#b1b1b1", "#FFFFFF", // 1
    "#150b00", "#6b5a46", "#998f82", "#cec9c2", // 2
    "#200000", "#794215", "#a47f60", "#d2c0b0", // 3
    "#3c1400", "#965f24", "#ba946b", "#ddc9b5", // 4
    "#004b00", "#07a622", "#58c36a", "#afe1b5", // 5
    "#002c00", "#008435", "#46ab79", "#a4d5bb", // 6
    "#001c00", "#007036", "#4b9f77", "#a4cebb", // 7
    "#003e36", "#00978f", "#4bb9b4", "#a4dcd8", // 8
    "#004172", "#0093d4", "#4eb7e2", "#a5dbef", // 9
    "#001550", "#005dac", "#4e93c7", "#a5c9e3", // 10
    "#00003c", "#011680", "#5562a9", "#a8b0d2", // 11
    "#000022", "#060450", "#57578a", "#abaac4", // 12
    "#0e003e", "#480881", "#8558ab", "#c2aad5", // 13
    "#280026", "#82017e", "#a955a9", "#d4aad3", // 14
    "#320004", "#8d0048", "#b25185", "#d8a6c1", // 15
    "#6b0002", "#cb0041", "#dd5180", "#eea7be", // 16
    "#7f0029", "#e11c77", "#eb68a2", "#f5b2cf", // 17
    "#4f0000", "#ab000b", "#c94f5c", "#e5a7ac", // 18
    "#7f0000", "#e00c00", "#ea5b55", "#f5afa8", // 19
    "#820000", "#e53600", "#ed7950", "#f5baa8", // 20
    "#8a3500", "#ea7d00", "#efa74f", "#f7d3a7", // 21
    "#8d4300", "#ee9104", "#f2b757", "#f8daa9", // 22
    "#8c8200", "#ebdd00", "#ebe14f", "#f9f4a8", // 23
    "#687300", "#c7d000", "#dae14f", "#edeea7", // 24
];
---
<div id="fondo"></div>

<nav id="menuColor" class="menu">
    {colors.map((color, index) => (
        <button class="btn btnColor">
            <div class="color" style={`background-color: ${color};`}></div>
        </button>
    ))}
</nav>

<nav id="menuTool" class="menu">
    <button class="btn btn-icon">
        <img src="/colorear/crayon.svg" />
    </button>
    <button class="btn btn-icon">
        <img src="/colorear/color-dropper.svg" />
    </button>
    <button class="btn btn-icon">
        <img src="/colorear/zoom+.svg" />
    </button>
    <button class="btn btn-icon">
        <img src="/colorear/zoom-.svg" />
    </button>
    <button class="btn btn-icon">
        <img src="/colorear/eraser.svg" />
    </button>
</nav>

<nav id="menu">
    <button class="btn btn-icon" onclick="history.back()">
        <img src="/colorear/left.svg" />
    </button>
    {!onlyBack &&
        <button id="reset" class="btn btn-icon">
            <img src="/colorear/fit.svg" />
        </button>
        <button id="selectedTool" data-menu="menuTool" class="btn btn-icon">
            <img src="/colorear/crayon.svg" />
        </button>
        <button id="selectedColor" data-menu="menuColor" class="btn ">
            <div class="color btn-icon" style="background-color: #FFFFFF;">
                <img src="/colorear/palette-color.svg" />
            </div>
        </button>
    }
    
</nav>

<script is:inline>

    fondo.addEventListener('wheel', function(e) {
        e.preventDefault();
    });

    function toggleMenu(name) {
        const menus = document.querySelectorAll('.menu');
        menus.forEach((menu) => {
            if (name) {
                if (menu.id === name) {
                    if (menu.style.opacity === "1") {
                        menu.style.opacity = "0";
                        fondo.style.opacity = "0";
                        setTimeout(function(){
                            menu.style.display = "none";
                            fondo.style.display = "none";
                        }, 500);
                    } else {
                        menu.style.display = "grid";
                        fondo.style.display = "block";
                        setTimeout(function(){
                            menu.style.opacity = "1";
                            fondo.style.opacity = "1";
                        }, 100);
                    }
                } else {
                    if (menu.style.opacity === "1") {
                        menu.style.opacity = "0";
                        setTimeout(function(){
                            menu.style.display = "none";
                        }, 500);
                    }
                }
            } else {
                menus.forEach(menu => menu.style.opacity = "0");
                fondo.style.opacity = "0";
                setTimeout(function(){
                    menus.forEach(menu => menu.style.display = "none");
                    fondo.style.display = "none";
                }, 500);
            }
        });
    }

    const buttonsMenu = document.querySelectorAll('#menu button');
    buttonsMenu.forEach((btn) => {
        btn.addEventListener('click', event => {
            toggleMenu(btn.dataset.menu);
        });
    });

    const btnColors = document.querySelectorAll('#menuColor button');
    btnColors.forEach((btn) => {
        btn.addEventListener('click', event => {
            selectedColor.style.backgroundColor = btn.children[0].style.backgroundColor;
            toggleMenu(btn.parentElement.id)
        });
    });

    const btnTools = document.querySelectorAll('#menuTool button');
    btnTools.forEach((btn) => {
        btn.addEventListener('click', event => {
            if (btn.children[0].src.includes("eraser")) {
                document.querySelectorAll("path.st0").forEach(path => path.style.fill = "#FFFFFF");
            } else {
                selectedTool.children[0].src = btn.children[0].src;
            }
            toggleMenu(btn.parentElement.id)
        });
    });

    const resetButton = document.querySelector('#reset');
    resetButton.addEventListener('click', (event) => {
        panzoom.reset();
    });

</script>


<style>

    #fondo {
        background-color: rgba(255,255,255,0.2);
        height: 100vh;
        width: 100vw;
        position: absolute;
        top: 0;
        left: 0;
        backdrop-filter: blur(5px);
        display: none;
        opacity: 0;
        transition: all var(--speed-menu);
    }

    nav#menu {
        display: flex;
        position: fixed;
        top: 0;
        gap: var(--button-gap);
        padding: var(--button-gap);
    }

    .menu {
        position: fixed;
        top: 0;
        gap: var(--button-gap);
        padding: var(--button-gap);
        padding-top: calc(var(--button-gap) * 2 + var(--button-size));
        transition: all var(--speed-menu);
        display: none;
        opacity: 0;
        width: 100%;
        height: 100%;
        box-sizing: border-box;
        grid-template-columns: repeat(auto-fill, var(--button-size));
        overflow: scroll;
    }

    .btn {
        border: 0;
        padding: 0.7rem;
        border-radius: 50%;
        background-color: white;
        box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.5);
        width: var(--button-size);
        height: var(--button-size);
        box-sizing: border-box;
    }

    .color {
        width: 100%;
        height: 100%;
        border-radius: 50%;
    }

    .btn-icon {
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .btn-icon img{
        width: 80%;
    }

    #reset img{
        width: 90%;
    }
</style>