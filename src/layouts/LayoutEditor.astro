---
import Menu from '../components/Menu.astro';

export interface Props {
	title: string;
}
const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="es">
	<head>
		<meta charset="utf-8" />
		<link rel="manifest" href="/colorear/js13kpwa.webmanifest" />
		<link rel="icon" type="image/svg+xml" href="/colorear/favicon.svg" />
		<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body style="margin: 0; height: 100vh; overflow: hidden; user-select: none; touch-action: none;">
		<div id='scene'>
			<slot />
		</div>
		<Menu />
		<script src="/colorear/panzoom.js" is:inline></script>
		<script is:inline>
			Number.prototype.between = function(a, b) {
				var min = Math.min.apply(Math, [a, b]),
				max = Math.max.apply(Math, [a, b]);
				return this > min && this < max;
			};
			const maxMovement = 5;
			
			let detail = {x: 0, y:0, scale:1};
			const elem = document.querySelector('#scene');
			const panzoom = Panzoom(elem, {
				maxScale: 10,
				cursor: "default",
				animate: true
			})
			elem.addEventListener('wheel', panzoom.zoomWithWheel)
			elem.addEventListener('panzoomstart', (event) => {
				detail = event.detail;
			})

			elem.addEventListener('panzoomend', (event) => {
				const detailEnd = event.detail;
				if ((detail.x - detailEnd.x).between(-maxMovement, maxMovement) && (detail.y - detailEnd.y).between(-maxMovement, maxMovement) && detail.scale === detailEnd.scale) {
					const path = event.detail.originalEvent.path[0];
					if (path.className.baseVal === "st0") {
						console.log(selectedTool.children[0].src);
						if (selectedTool.children[0].src.includes("crayon")) {
							path.style.fill = selectedColor.style.backgroundColor;
						} else if (selectedTool.children[0].src.includes("color-dropper")) {
							selectedColor.style.backgroundColor = path.style.fill;
						}
					}
				}
			})
			
			window.addEventListener("orientationchange", (event) => {
				panzoom.reset();
			});

		</script>
		<style>
			#scene{
				height: 100%;
				width: 100%;
				padding: 3rem;
				box-sizing: border-box;
			}
		</style>
		<style is:inline>
			svg {
				height: 100%;
				width: 100%;
			}
		</style>
	</body>
</html>